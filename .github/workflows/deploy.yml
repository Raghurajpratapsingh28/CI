name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: []
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Setup Prisma
      run: npx prisma generate

    - name: Build application
      run: npm run build

    - name: Build Docker image
      run: docker build -t planetx-backend .

    - name: Login to Docker Hub (optional)
      if: ${{ secrets.DOCKER_USERNAME }}
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image (optional)
      if: ${{ secrets.DOCKER_USERNAME }}
      run: |
        docker tag planetx-backend ${{ secrets.DOCKER_USERNAME }}/planetx-backend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/planetx-backend:latest

    # Add deployment steps here based on your hosting platform
    # Examples:
    # - For Heroku:
    # - name: Deploy to Heroku
    #   uses: akhileshns/heroku-deploy@v3.12.14
    #   with:
    #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
    #     heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
    #     heroku_email: ${{ secrets.HEROKU_EMAIL }}
    
    # - For AWS ECS:
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1 